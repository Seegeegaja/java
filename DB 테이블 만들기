chcp

chcp 65001 - utf-8로 전환

mysql -u root -p

show databases;

desc 0000000; -구조 보는키

select * from 000000000; - 테이블 안쪽 보는거

source 컨c컨v 복붙할때

use test_db;

show tables;

테이블 만들기
create table professor(
p_id int primary key auto_increment,
name varchar(20) not null,
belong varchar(200),
phone varchar(20)

내용 넣기 professor에
insert into professor
(name, belong, phone)
values('유재석', 'COMPUTER','01012345678');


create table professor(
p_id int primary key auto_increment,
name varchar(20) not null,
belong varchar(20),
phone varchar(20) );

insert into professor
(name, belong , phone)
values ('유재석', 'COMPUTER' , '01012345678');


insert into professor(name, belong , phone)
values ('황영조', 'SPORTS' , '01021521489'),
('케이멀', 'DANCE' , '01065498721'),
('호날두', 'COMPUTER' , '01077885544'),
('장준용', 'SPORTS' , '01024697319');


mysql 정렬하기(검색)

select name, phone, from 테이블 이름
조건 where 필드명 = 'O'



select distinct belong from student; 주소만 대표적으로belong

select name, phone from student
order by name asc
limit 5; ---- 데이터중 몇개 가져 오겠냐~~~~~



필드명 like''

% = 공백을 포함한 모든것

_ = 무조건 갯수만큼 문자필요

ex)
select * from student
    -> where s_id like '2008%';




 select s_id, name, belong from student
    -> where s_id like '2011%'
    -> order by belong asc, name desc;



select name, belong from student
    -> where belong not like 'com%';
create table 테이블명(
필드명 타입 제약조건,)

id,name,address,phon
create table telbook(
 di int primary key auto_increment,
name varchar (20) nat null,
address varchar(200),
phone varchar(20),
);

insert into telbook (name, address, phone),
values ('장준용' , '서울 강남구' , '010-1111-1111');  

belong이 dance or sports

in안에 필드명 입력 입력한 값찾기 in 와일드카드를 인식하지 못함
in('dance','sports')

원하는 내용의 자릿수 찾기
wild caracter : %,_
where 필드명 like' '


select *from student
where name>10


staus 2 and 3in
belong에 %C% 포합하는 자료를
 s_id,name,belong,stauts를 출력
name에 대해서는 내림차순으로
Ex)
select s_id,name,belong,status from student
where status in (2,3) and belong like'%C%'
order by name desc;

select s_id as ID ,name as 이름,belong as 소속,status from student
where status in (2,3) and belong like'%C%'
order by name desc;



삭제/수정 조심해서 사용
drop : 완전히 구조까지 삭제
delete : 내용만 삭제 ---- 조건 명시 해야함

폰중에 343을 포함하는 자료를 삭제
delete from student where phone like'%343%';
drop table; 테이블 명
drop database 데이터 명

update 구문 -- 항상 조건을 달아서 처리
update 테이블 명
          set 바꾸고 싶은 컬럼
where  필드명 = 조건
update student set phone = '010-1111-2222';


조로의 의 소속을 댄스로 변경

update student set belong ='DANCE'
where s_id = '20100102';

오공의 belong을 ' Golf', phone = '119'
update student set belong = 'Golf', phone = '119'
    -> where name = '오공';






crud
c: Create(inset into table명... 구문)
r: Read (select * from table명... 구문)
u : Update(update table table명... 구문)
d : Delete(Delete from table명... 구문)





dept 테이블 생성(
-dept_id : 기본키,자동증가
-dept_name : 문자 -null허용안함
-dept_ioc : 문자 -null허용안함

data
1.기획부 서울
2.영업1부 서울
3.영없2부 부산
4.영업3부 대구
5.관리부 서울

출력
전체 영업부 자료의 ID,NAME,LOCATION을 필드명으로 출력

영업3부 삭제
관리부의 지역을 제주도로 변경

테이블 만들기
create table dept (
dept_id int primary key auto_increment,
name varchar (20) not null,
ico varchar (20) not null
);

내용 넣기
insert into dept
(name,ico)
values('기획부','서울'),('영업1부','서울'),('영업2부','부산'),
('영업3부','대구'),('관리부','서울');

삭제
delete from dept where name = '영업3부';


수정
update dept set ico = '제주도'
    -> where name = '관리부';

구조 변경 구문
--modify : 필드명은 못바꾸는것
alter table 테이블 명
modify column 원래이름 타입...


change : 필드명까지 바꾸는것
alter table 테이블 명
change column 원래이름 타입...


change column name name vachar(50);


기본함수 ---- grouping
sum, avg(평균계산),count,max(최대값),min(최소값)


연산 조건으로 묶을 그룹지정 : group by
묶은 그룹의 결과에 대한 별고의 조건을 지정 : having

select count(name) from student;

select count(*) as TotalRow from student;
+----------+
| TotalRow |
+----------+
|       16 |
+----------+
1 row in set (0.00 sec)

 select count(*) as count from student where belong = 'computer';
+-------+
| count |
+-------+
|     4 |
+-------+
1 row in set (0.00 sec)

belong 		counte
computer 	 4
dance		 2
spots 		 3


select belong as Belong , count(*) as count from student
group by belong
order by count asc;
+----------+-------------+
| Belong   | Belongcount |
+----------+-------------+
| Golf     |           1 |
| MUSIC    |           2 |
| SPORTS   |           2 |
| ENGLISH  |           2 |
| COMPUTER |           4 |
| DANCE    |           5 |
+----------+-------------+


select belong as Belong , count(*) as Belongcount from student
group by belong
order by Belongcount asc;
+----------+-------------+
| Belong   | Belongcount |
+----------+-------------+
| Golf     |           1 |
| MUSIC    |           2 |
| SPORTS   |           2 |
| ENGLISH  |           2 |
| COMPUTER |           4 |
| DANCE    |           5 |
+----------+-------------+


select belong as Belong , count(*) as Belongcount from student
group by belong
having Belongcount >3
order by Belongcount asc;
+----------+-------------+
| Belong   | Belongcount |
+----------+-------------+
| COMPUTER |           4 |
| DANCE    |           5 |
+----------+-------------+
2 rows in set (0.00 sec)

소속이 컴퓨터 또는 댄스인 구릅의 학생수의내림차순으로 출력
select belong as Belong , count(belong) as count from student


select belong, count(*) as groupCount from student
where belong in ('computer','dance')
group by belong
order by groupCount asc;
+----------+------------+
| belong   | groupCount |
+----------+------------+
| COMPUTER |          4 |
| DANCE    |          5 |
+----------+------------+


select belong as 소속, count(*) 인원수 , sum(status) as 합
from student
group by belong
order by ;

select count(*), max(status),min(status),sum(status),avg(status)
from student
group by belong;

distinct --중복을 제외한 데이터만 가져온다
-limit
offset --가지고 오기 시작할 위치
select distinct *


select * from student limit 3 offset 1;

select * from song as s
inner join girl_group as g
on s.s_id = g.hit_song_id
inner join entertainment as e
on g.enter_id = e.e_id


가사의 me 를 포함하는 자료에 
소속사, 그룹이름 , 노래제목, 가사를 
출력합니다

select e.name, g.name, s.title
    -> from entertainment e
    -> join girl_group g
    -> on e.e_id = g.enter_id
    -> join song s
    -> on s.s_id = g.hit_song_id;
+-----------+--------------------------+--------------+
| name      | name                     | title        |
+-----------+--------------------------+--------------+
| JYP       | 원더걸스                 | Tell Me      |
| SM        | 소녀시대                 | Gee          |
| SM        | 카라                     | 미스터       |
| 안테나    | 브라운아이드걸스         | Abracadabra  |
| 하이브    | 다비치                   | 8282         |
| JYP       | 2NE1                     | I Don't car  |
| 하이브    | f(x)                     | 피노키오     |
| 하이브    | 시크릿                   | 별빛달빛     |
| 안테나    | 레인보우                 | A            |
+-----------+--------------------------+--------------+

소속사별 속해있는 소속그룹의 수를 출력

select e.name, count(*) as 그룹수
from entertainment e
join girl_group g
on e.e_id = g.enter_id
group by e.name;

+-----------+-----------+
| name      | 그룹수    |
+-----------+-----------+
| JYP       |         3 |
| SM        |         3 |
| 안테나    |         2 |
| 하이브    |         3 |
+-----------+-----------+

select g.g_id, name from girl_group g
left join song s
on g.hit_song_id = s.s_id;

+------+--------------------------+
| g_id | name                     |
+------+--------------------------+
|    1 | 원더걸스                 |
|    2 | 소녀시대                 |
|    3 | 카라                     |
|    4 | 브라운아이드걸스         |
|    5 | 다비치                   |
|    6 | 2NE1                     |
|    7 | f(x)                     |
|    8 | 시크릿                   |
|    9 | 레인보우                 |
|   10 | 에프터 스쿨              |
|   11 | 포미닛                   |
+------+--------------------------+



select g.g_id, name, title from girl_group g
left join song s
on g.hit_song_id = s.s_id;

+------+--------------------------+--------------+
| g_id | name                     | title        |
+------+--------------------------+--------------+
|    1 | 원더걸스                 | Tell Me      |
|    2 | 소녀시대                 | Gee          |
|    3 | 카라                     | 미스터       |
|    4 | 브라운아이드걸스         | Abracadabra  |
|    5 | 다비치                   | 8282         |
|    6 | 2NE1                     | I Don't car  |
|    7 | f(x)                     | 피노키오     |
|    8 | 시크릿                   | 별빛달빛     |
|    9 | 레인보우                 | A            |
|   10 | 에프터 스쿨              | NULL         |
|   11 | 포미닛                   | NULL         |
+------+--------------------------+--------------+

select g.g_id, name, title from girl_group g
right join song s
on g.hit_song_id = s.s_id;

+------+--------------------------+--------------------+
| g_id | name                     | title              |
+------+--------------------------+--------------------+
|    1 | 원더걸스                 | Tell Me            |
|    2 | 소녀시대                 | Gee                |
|    3 | 카라                     | 미스터             |
|    4 | 브라운아이드걸스         | Abracadabra        |
|    5 | 다비치                   | 8282               |
| NULL | NULL                     | 기대해             |
|    6 | 2NE1                     | I Don't car        |
| NULL | NULL                     | Bad Girl Good Girl |
|    7 | f(x)                     | 피노키오           |
|    8 | 시크릿                   | 별빛달빛           |
|    9 | 레인보우                 | A                  |
| NULL | NULL                     | 나혼자             |
| NULL | NULL                     | LUV                |
| NULL | NULL                     | 짧은치마           |
| NULL | NULL                     | 위아래             |
| NULL | NULL                     | Dumb Dumb          |
+------+--------------------------+--------------------+



create table employee(
id int primary key auto_increment,
name varchar(10),
superior_id int);

insert into employee(name, superior_id)
values('김사장',null),
('정과장',1),
('최대리',2),
('이대리',3),
('박고문',null);

update employee set superior_id = '2'
where name = '이대리';
